javascript:(function(){const t="table { border-collapse: collapse; border: 1px solid black; width: 100%; } td, th { padding: 4px; } tr:nth-child(even) { background: #eee; } th { background: #eFe; }";const e=t=>new Promise(e=>{const n=new XMLHttpRequest;n.onload=(t=>e(n.responseText));n.open("GET",t);n.send()});const n=t=>Array.from(t.querySelectorAll("tbody > tr")).map(o);const r=(t,e)=>t===null?null:t[e];const a=t=>{if(t.innerHTML==="Unwrangleable")return"unwrangleable";else if(t.innerHTML==="Yes")return"yes";else return"no"};const l=t=>t===null?null:Array.from(t).map(t=>t.innerHTML);const o=t=>({tag:t.querySelector("th > label").innerHTML,canonical:a(t.querySelector("td[title='canonical?']")),syn:r(t.querySelector("td[title='metatag or synonym'] a"),"innerHTML"),created:t.querySelector("td[title='created']").innerHTML,taggings:t.querySelector("td[title='taggings']").innerHTML,characters:l(t.querySelectorAll("td[title='characters'] li a"))});const c=t=>t.querySelector("a[rel='next']");const i=t=>new Promise(e=>setTimeout(e,t));const s=t=>`<tr><td>${t.tag}</td> <td>${t.canonical}</td> <td>${t.syn}</td> <td>${t.created}</td> <td>${t.taggings}</td> <td>${t.characters===null?null:t.characters.join("<br/>")}</td></tr>`;async function d(r){let a=1;const l=new DOMParser;const o=window.open();const d=o.document;d.write("<meta charset='utf-8'><table><tr>");d.write("<style>"+t+"</style>");d.write(["tag","canonical","syn","created","taggings","characters"].map(t=>`<th>${t}</th>`).join(""));d.write("</tr>");while(r!==null){d.title=`${a} pages deep`;a++;const t=l.parseFromString(await e(r),"text/html");d.write(n(t).map(s).join(""));const o=c(t);r=o?o.href:null;await i(3e3)}d.write("</table>");d.title="Done!";alert("Done!")}d(window.location.href)})();
